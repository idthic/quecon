
2020-09-06

* 実行ノードでプロセスツリーがどの様になっているか確認した

  sbatch で投入したジョブのツリーがあって、
  更に其処から srun で提出れたジョブのツリーが独立に存在する。
  それとは別に sleep 100000000 しているジョブがいる。
  これは監視用のプロセスであろう。

  此処で生じる疑問は sbatch と srun の関係は何かという事である。
  sbatch から直接コマンドを実行してはいけないのか。
  実は srun を使うとまた別の実行ノードに転送される可能性もあるのだろうか。

  ? ローカルで srun を実行すると何処で実行されるのか。

    結果、ローカルでジョブが実行される様だ。ジョブが提出されましたと表
    示されて暫くしてから実行されるのでちゃんとジョブ管理されて実行はさ
    れている。つまり srun は現在のノードでタスクを実行するという物。ノー
    ドが忙しい状態になっていたのはローカルで srun してジョブを提出して
    動かしている人がいるからだろうか。

    sbatch した先で srun すると直接その場で実行する。ジョブが提出され
    ましたなどの表示はないし実行が開始されるまでの時間も比較的短いので
    改めてジョブ管理テーブル上に戻るということもない様である。

2020-09-05

* 名称について再考

  追加の機能をサブコマンドで実装した。
  すると idtsub submit の様になって冗長である。
  そもそも idtsub は打ちにくいし発音しにくい。
  idt に特有の機能なのかというとそうでもない気がする。

  元々 sub だったのを idtsub にしたのは
  git repository に入れて一つのパッケージにする上で
  他のホストでも使えるように衝突のない名前に変えたのだった。

  世の中には bsub, qsub などがある。これにならって
  ?sub とするのは一つの案である。

  もう一つの判断条件は一文字コマンドにしやすいという事である。
  つまり他の一時もコマンドと被らない文字で始めたい。

    a: awk による arithmetic
    c: cd
    d: date
    e: - 過去にコマンド実行に割り当てた事がある
    f: fg
    g: git
    h: history
    j: jobs
    l: ls -l
    m: make
    o: open, cygstart, xdgopen
    p: ps uaxf
    s: stty sane
    v: view (less, etc.)
    w: w, who
    x: startx

  使われていない文字は以下の通り
    b i k n q r t u y z

  この中で job scheduler に向いていそうなのは。
  q = queue を連想させる。b = batch である。
  何れも qsub, bsub で既に使われている。
  この関連では Load Leveler というジョブスケジューラは
  llsubmit を使っている。つまり l = load である。
  実の所、これらと頭文字が被っても良い。

  既に似たようなコマンドは沢山ある。
  つまり現在のホストのプロセスの一覧である。
  jobs は現在のセッションに関連する物を表示する。
  ps, top は全てのプロセスに関する情報。
  cpulook は様々のホストに渡るプロセスの情報。
  

* 各ジョブスケジューラのコマンド比較表
  https://confluence.desy.de/display/IS/SLURM+Rosetta

* slurm の標準出力、標準エラー出力は一体どうなっているのか

  既定では slurm-*.out という名前のファイルが一個作られるだけである。
  一方で sbatch のオプションでは -e と -o でそれぞれ別々に指定できる。

  ? 既定では標準エラーは何処に行くのか
    両方とも slurm-*.out に合流して出力される。

  ? -e と -o を指定した時に slurm-*.out はどうなるのか。
    作られない。

  ? -e だけまたは -o だけ指定するとどうなるのか
    -o だけ指定すると両方ともにそこに出力され、slurm-*.out は作成されない。
    -e だけ指定すると標準エラーだけそこに出力され、
    標準出力は依然として slurm-*.out に出力される。

  ? -e と -o に同じファイル名を指定するとどうなるのか
    両方ともそのファイルに出力されるが出力の順序は保たれない。
    但し、互いに上書きし合うという事は起こらない。
    これは何も指定しない場合の slurm-*.out や、
    -o だけ指定した時の出力先でも同様の振る舞いである。

  順序が保たれない事などを考えると自前でリダイレクトした方が良いかもしれない。
  或いは初めから out と err に別々のファイルを指定するという事。

  然し、異なる枠組みの上で動かしたいという事があるかもしれないので、
  この辺りは何れにしても自前で行う様にしておいた方が良い。
  標準エラーと標準出力を別々に保存するかあるいは一緒に保存するかは…
  一緒に保存する事にする。もし別々に保存する必要があるのであれば、
  それは submit する時にユーザの側で指定するべきなのである。

  →自前で redirect する様にしたがどうもそれでも標準出力と
    標準エーラ出力の順序が保たれない様である。
    bash が内部で勝手にバッファリングしているのか。
    或いは OS 自体の問題だろうか。然し OS は linux の筈である。不思議だ。


